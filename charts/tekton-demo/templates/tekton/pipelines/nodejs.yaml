apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: {{ .Values.pipeline.name }}
  namespace: {{ .Values.application.environments.cicd }}
  labels:
    app: {{ .Values.application.name }}
spec:
  resources:
    - name: nodejs-git
      type: git
    - name: nodejs-image-development
      type: image
    - name: nodejs-image-production
      type: image

  params:
    - name: ref
      description: Ref of the application
    - name: revision
      description: git unique head commit id
    - name: repofullname
      description: repository full name
    - name: author
      description: commit author
    - name: message
      description: commit message
    - name: APP_NAME
      description: The name of the application
      default: {{ .Values.application.name }}
    - name: APP_VERSION
      description: The version of the application
      default: {{ .Values.application.version }}
    - name: AUTHORS_API_KEY
      description: The OCP secret that contains DB credentials
      default: 'authors-secret-api'
    - name: DEPLOY_PROJECT
      description: The project where you deploy the app
      default: {{ .Values.application.environments.development }}
    - name: PROMOTE_PROJECT
      description: The project where you deploy the app
      default: {{ .Values.application.environments.production }}

  tasks:

  - name: status
    params:
    - name: ref
      value: $(params.ref)
    - name: revision
      value: $(params.revision)
    - name: author
      value: $(params.author)
    - name: message
      value: $(params.message)
    taskRef:
      kind: Task
      name: status

  - name: github-pending
    taskRef:
      kind: Task
      name: github-set-status
    runAfter:
      - status
    params:
    - name: REPO_FULL_NAME
      value: $(params.repofullname)
    - name: SHA
      value: $(params.revision)
    - name: DESCRIPTION
      value: "Build has started ($(params.message))"
    - name: STATE
      value: pending
    - name: TARGET_URL
      value: https://tekton/dashboard/taskrun/log

  - name: build
    taskRef:
      name: s2i-nodejs
    runAfter:
      - github-pending
    params:
      - name: "ref"
        value: "$(tasks.status.results.ref)"
      - name: "revision"
        value: "$(tasks.status.results.revision)"
      - name: "revision-type"
        value: "$(tasks.status.results.revision-type)"
      - name: "revision-name"
        value: "$(tasks.status.results.revision-name)"
    resources:       
      inputs:
        - name: source
          resource: nodejs-git
      outputs:
        - name: image
          resource: nodejs-image-development

  - name: deploy
    taskRef:
      name: deploy-nodejs-app
    runAfter:
      - build
    params:
        - name: "ref"
          value: "$(tasks.status.results.ref)"
        - name: "revision"
          value: "$(tasks.status.results.revision)"
        - name: "revision-type"
          value: "$(tasks.status.results.revision-type)"
        - name: "revision-name"
          value: "$(tasks.status.results.revision-name)"
        - name: APP_NAME
          value: "$(params.APP_NAME)"
        - name: APP_VERSION
          value: "$(params.APP_VERSION)"  
        - name: AUTHORS_API_KEY
          value: "$(params.AUTHORS_API_KEY)"
        - name: DEPLOY_PROJECT
          value: "$(params.DEPLOY_PROJECT)"    
    resources:
      inputs:
        - name: image
          resource: nodejs-image-development

  - name: test
    taskRef:
      name: test-nodejs-app
    runAfter:
      - deploy
    params:
      - name: APP_NAME
        value: "$(params.APP_NAME)"
      - name: APP_VERSION
        value: "$(params.APP_VERSION)"
      - name: DEPLOY_PROJECT
        value: "$(params.DEPLOY_PROJECT)"

  - name: promote
    taskRef:
      name: promote-nodejs-app
    runAfter:
      - test
    params:
      - name: "ref"
        value: "$(tasks.status.results.ref)"
      - name: "revision"
        value: "$(tasks.status.results.revision)"
      - name: "revision-type"
        value: "$(tasks.status.results.revision-type)"
      - name: "revision-name"
        value: "$(tasks.status.results.revision-name)"
      - name: APP_NAME
        value: "$(params.APP_NAME)"
      - name: APP_VERSION
        value: "$(params.APP_VERSION)"
      - name: AUTHORS_API_KEY
        value: "$(params.AUTHORS_API_KEY)"
      - name: DEPLOY_PROJECT
        value: "$(params.DEPLOY_PROJECT)"
      - name: PROMOTE_PROJECT
        value: "$(params.PROMOTE_PROJECT)"
    resources:
      inputs:
        - name: image
          resource: nodejs-image-development
      outputs:
        - name: image
          resource: nodejs-image-production