apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: finally
  namespace: {{ .Values.application.environments.cicd }}
spec:
  workspaces:
    - name: source
  params:
    - name: uid
      type: string
    - name: name
      type: string
    - name: repofullname
      type: string
    - name: repourl
      type: string
  steps:
    - name: debug
      image: registry.redhat.io/rhel8/nodejs-12
      resources: {}
      workingDir: /workspace/source
      script: |
        #!/bin/sh
          set -ex
          # find /workspace/source/
          echo UID: $(params.uid)
          echo Name: $(params.name)
      securityContext:
        runAsUser: 0

    # - name: update-github
    #   image: registry.access.redhat.com/ubi8/ubi:latest
    #   env:
    #     - name: GITHUBTOKEN
    #       valueFrom:
    #         secretKeyRef:
    #           name: {{ .Values.pipeline.webhook.github.secret }}
    #           key: password
    #   script: |
    #     #!/usr/libexec/platform-python
    #     import json
    #     import os
    #     import http.client
    #     status_url = """/repos/$(params.repofullname)/statuses/$(params.revision)"""

    #     data = {
    #         "state": "success",
    #         "target_url": "https://replaceme",
    #         "description": "Building",
    #         "context": "tekton"
    #     }
    #     conn = http.client.HTTPSConnection("api.github.com")
    #     r = conn.request(
    #         "POST",
    #         status_url.rstrip("\n"),
    #         body=json.dumps(data),
    #         headers={
    #             "User-Agent": "TektonCD, the peaceful cat",
    #             "Authorization": "Bearer " + os.environ["GITHUBTOKEN"],
    #         })
    #     resp = conn.getresponse()
    #     if not str(resp.status).startswith("2"):
    #         print("Error: %d" % (resp.status))
    #         print(resp.read())
    #         # sys.exit(resp.read())
    #     else:
    #       print("GitHub status 'success' has been set")

    - name: status
      image: registry.redhat.io/rhel8/nodejs-12
      resources: {}
      workingDir: /workspace/output
      script: |
        #!/bin/sh
        curl -LO https://github.com/tektoncd/cli/releases/download/v0.13.0/tkn_0.13.0_Linux_x86_64.tar.gz
        tar xvzf tkn_0.13.0_Linux_x86_64.tar.gz -C /usr/local/bin/ tkn
        /usr/local/bin/tkn pr desc $(params.name)
      securityContext:
        runAsUser: 0