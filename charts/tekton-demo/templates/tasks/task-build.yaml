apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build
  namespace: {{ .Values.application.environments.cicd }}
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  params:
    - name: ref
      description: Git reference
    - name: repourl
      description: repository url from github payload
    - name: repofullname
      description: full name user-org/reponame from github
    - name: revision
      description: commit head unique id
      type: string
    - name: revision-type
      description: revision type
      type: string
    - name: revision-name
      description: revision name
      type: string
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "false"
      type: string
    - name: runtime
      description: runtime image to install dependencies
    - name: command
      description: command to be executed in order to build the source code, e.g npm run build
  workspaces:
    - name: source

  results:
  - name: image
    description: url of the image just built
  - name: digest
    description: digest of the image just built
    
  steps:

    - name: image-prepare
      image: registry.redhat.io/rhel8/nodejs-12
      workingDir: /workspace/source/{{ .Values.pipeline.build.s2i.context }}
      command: ["/bin/bash", "-c"]
      args:
        - |-
          npm run build
      securityContext:
        runAsUser: 0

    - name: image-build
      image: registry.redhat.io/rhel8/buildah
      workingDir: /workspace/source/{{ .Values.pipeline.build.s2i.context }}
      resources: {}
      script: |
        #!/bin/sh
        ls -ls
        buildah bud --tls-verify=$(inputs.params.TLSVERIFY) --layers -f Dockerfile -t image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-development:$(inputs.params.revision-name) .
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true

    - name: image-push
      image: registry.redhat.io/rhel8/buildah
      command: ['buildah', 'push', '--tls-verify=$(inputs.params.TLSVERIFY)', 'image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-development:$(inputs.params.revision-name)', 'docker://image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-development:$(inputs.params.revision-name)']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      resources: {}
      securityContext:
        privileged: true

  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}