apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-agnostic
  namespace: {{ .Values.application.environments.cicd }}
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  params:
    - name: runtime
      description: runtime image to install dependencies
      type: string
    - name: command
      description: command to be executed to build the source code
      type: string
    - name: context
      description: working dir
      type: string
    - name: revision-name
      description: revision name
      type: string
  workspaces:
    - name: source

  results:
  - name: image
    description: url of the image just built
  - name: digest
    description: digest of the image just built
    
  steps:

    - name: image-prepare
      image: $(inputs.params.runtime)
      workingDir: /workspace/source/$(inputs.params.context)
      resources: {}
      script: |
        #!/bin/sh
        if $(inputs.params.command); then
          $(inputs.params.command)
        else
          echo Skipping. Not implemented: command from values.yaml
        fi
      securityContext:
        runAsUser: 0

    - name: image-build
      image: registry.redhat.io/rhel8/buildah
      workingDir: /workspace/source/$(inputs.params.context)
      resources: {}
      script: |
        #!/bin/sh
        ls -ls
        buildah bud --tls-verify=false --layers -f Dockerfile -t image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-development:$(inputs.params.revision-name) .
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true

    - name: image-push
      image: registry.redhat.io/rhel8/buildah
      command: ['buildah', 'push', '--tls-verify=false', 'image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-development:$(inputs.params.revision-name)', 'docker://image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-development:$(inputs.params.revision-name)']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      resources: {}
      securityContext:
        privileged: true

  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}