apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: status
  namespace: {{ .Values.application.environments.cicd }}
spec:
  params:
    - name: ref
      type: string
    - name: revision
      type: string
    - name: author
      type: string
    - name: message
      type: string
  results:
    - name: ref
      description: reference
    - name: revision
      description: unique id from git head commit
    - name: revision-type
      description: Contains the type of branch - feature, release,...
    - name: revision-name
      description: Contains the name of the branch without the type, ie. omitting the first slash
    - name: full-revision-name
      description: Contains the name of the branch without the type, ie. omitting the first slash
    - name: message
      description: Contains the commit message
    - name: author
      description: Contains the author username
  steps:
    - name: git
      image: quay.io/openshift/origin-cli:latest
      script: |
        #!/bin/sh
        echo $(params.ref)
        echo $(params.revision)
        echo $(params.author)
        echo $(params.message)
        echo $(params.ref) > /tekton/results/ref
        echo $(params.revision) > /tekton/results/revision
        echo $(params.author) > /tekton/results/author
        echo $(params.message) > /tekton/results/message
        echo $(params.ref) | awk -F "/" '{if (NF > 1) {printf "%s", $3 > "/tekton/results/revision-type"; printf "%s", $4 > "/tekton/results/revision-name"; printf "%s/%s", $3, $4 > "/tekton/results/full-revision-name"} else {printf "%s", "unknown" > "/tekton/results/revision-type"; printf "%s", $3 > "/tekton/results/revision-name"; printf "%s", $4 > "/tekton/results/full-revision-name"}}'
        echo "Revision-type:" $(cat /tekton/results/revision-type)
        echo "Revision-name:" $(cat /tekton/results/revision-name)
      resources: {}
      workingDir: /workspace/source
