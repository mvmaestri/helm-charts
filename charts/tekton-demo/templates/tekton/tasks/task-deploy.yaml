apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy-nodejs-app
  namespace: {{ .Values.application.environments.cicd }}
spec:
  params:
    - name: ref
      description: git ref
      type: string
    - name: "revision"
      description: git unique head commit id
      type: string
    - name: "revision-type"
      description: revision type usually branch type
      type: string
    - name: "revision-name"
      description: revision name usually version or branch name
      type: string
    - name: APP_NAME
      description: The name of the application
      default: {{ .Values.application.name }}
      type: string
    - name: APP_VERSION
      description: The version of the application
      default: {{ .Values.application.version }}
      type: string
    - name: AUTHORS_API_KEY
      description: The version of the application
      default: 'authors-secret-api'
      type: string
    - name: DEPLOY_PROJECT
      description: The project where you deploy the app
      default: {{ .Values.application.environments.production }}
      type: string
  resources:
    inputs:
      - name: image
        type: image
  steps:
      - name: create-app
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc get dc $(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)
            if [[ $? -ne 0 ]]
            then
                oc new-app -i $(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)
            else
                echo "Application already exists."
            fi
      - name: expose-app
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc get svc $(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)
            if [[ $? -ne 0 ]]
            then
                oc expose svc/$(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)
            else
                echo "Application is already exposed."
            fi
      - name: set-app-labels
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc label dc/$(inputs.params.APP_NAME) app.kubernetes.io/name=$(inputs.params.APP_NAME) --overwrite -n $(inputs.params.DEPLOY_PROJECT)
            oc label dc/$(inputs.params.APP_NAME) app.version=$(inputs.params.revision-name) --overwrite -n $(inputs.params.DEPLOY_PROJECT)
            oc label dc/$(inputs.params.APP_NAME) app.revision-id=$(inputs.params.revision) --overwrite -n $(inputs.params.DEPLOY_PROJECT)
            oc label dc/$(inputs.params.APP_NAME) app.revision-type=$(inputs.params.revision-type) --overwrite -n $(inputs.params.DEPLOY_PROJECT)
            oc label dc/$(inputs.params.APP_NAME) app.revision-name=$(inputs.params.revision-name) --overwrite -n $(inputs.params.DEPLOY_PROJECT)
            oc set env dc/$(inputs.params.APP_NAME) revision-id=$(inputs.params.revision) -n $(inputs.params.DEPLOY_PROJECT)
            oc set env dc/$(inputs.params.APP_NAME) revision-type=$(inputs.params.revision-type) -n $(inputs.params.DEPLOY_PROJECT)
            oc set env dc/$(inputs.params.APP_NAME) revision-name=$(inputs.params.revision-name) -n $(inputs.params.DEPLOY_PROJECT)
            oc set env dc/$(inputs.params.APP_NAME) --from secret/$(inputs.params.AUTHORS_API_KEY) -n $(inputs.params.DEPLOY_PROJECT)
      - name: set-app-probes
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc set probe dc/$(inputs.params.APP_NAME) --remove --readiness --liveness -n $(inputs.params.DEPLOY_PROJECT)
            oc set probe dc/$(inputs.params.APP_NAME) --readiness --get-url=http://:8080/ --initial-delay-seconds=30 -n $(inputs.params.DEPLOY_PROJECT)
      - name: set-app-autoscale
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc get hpa $(inputs.params.APP_NAME)  -n $(inputs.params.DEPLOY_PROJECT)
            if [[ $? -ne 0 ]]
            then
                oc autoscale dc $(inputs.params.APP_NAME) --min 1 --max 2 --cpu-percent=75 -n $(inputs.params.DEPLOY_PROJECT)
            else
                echo "Application autoscale is already configured."
            fi
      - name: describe-app-triggers
        image: quay.io/openshift/origin-cli:latest
        workingDir: /workspace/source
        command: ["/bin/bash", "-c"]
        args:
          - |-
            oc set triggers dc/$(inputs.params.APP_NAME) -n $(inputs.params.DEPLOY_PROJECT)